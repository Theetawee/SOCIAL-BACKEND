# Generated by Django 5.0.1 on 2024-03-18 09:34

import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("badge_image", models.ImageField(upload_to="badges/")),
                ("description", models.TextField()),
                ("value", models.DecimalField(decimal_places=1, max_digits=10)),
                (
                    "image_hash",
                    models.CharField(
                        default="L02v:alCD4fRlCk[Z2Z28wf5HXaI", max_length=255
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Hobby",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("username", models.CharField(max_length=150, unique=True)),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None, unique=True
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "male"),
                            ("female", "female"),
                            ("other", "other"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "profile_image",
                    models.ImageField(blank=True, null=True, upload_to="profiles/"),
                ),
                ("profile_url", models.URLField(blank=True, null=True)),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date joined"),
                ),
                (
                    "last_login",
                    models.DateTimeField(auto_now=True, verbose_name="Last login"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("bio", models.TextField(blank=True, null=True)),
                ("verified", models.BooleanField(default=False)),
                ("location", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "profile_image_hash",
                    models.CharField(
                        default="LTL55tj[~qof?bfQIUj[j[fQM{ay", max_length=255
                    ),
                ),
                ("username_last_update", models.DateTimeField(blank=True, null=True)),
                (
                    "last_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                ("badges", models.ManyToManyField(blank=True, to="accounts.badge")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Friendship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_started", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("acquaintance", "Acquaintance"),
                            ("close_friend", "Close Friend"),
                            ("best_friend", "Best Friend"),
                        ],
                        default="acquaintance",
                        max_length=20,
                    ),
                ),
                ("is_one_sided", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                (
                    "account1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friendships_as_account1",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "account2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friendships_as_account2",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="account",
            name="friends",
            field=models.ManyToManyField(
                blank=True, through="accounts.Friendship", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="hobbies",
            field=models.ManyToManyField(blank=True, to="accounts.hobby"),
        ),
        migrations.CreateModel(
            name="UserDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("os_name", models.CharField(blank=True, max_length=255, null=True)),
                ("os_version", models.CharField(blank=True, max_length=255, null=True)),
                ("engine", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "device_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "device_brand",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "device_model",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "device_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "client_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "client_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "client_version",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("last_used", models.DateTimeField(auto_now=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FriendRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_sent", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("accepted", "accepted"),
                            ("declined", "declined"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipient",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sender",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-date_sent"],
                "unique_together": {("sender", "recipient")},
            },
        ),
    ]
